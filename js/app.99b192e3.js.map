{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///./src/App.vue?d55d","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/store/index.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","on","main","staticStyle","model","callback","$$v","expression","_l","item","label","getRecord","record","staticRenderFns","addr","page","options","methods","getSeq","arr","Math","floor","random","min","console","log","getPage","OPT","memory","count","inMem","num","paddr","miss","mem0","mem1","mem2","mem3","full","replacePage","maxt","FIFO","queue","LRU","lastUse","minLastUse","LFU","useCount","minUse","Clock","refbits","alert","ratio","component","Vue","use","Vuex","Store","state","mutations","actions","ElementUI","config","productionTip","store","render","h","App","$mount"],"mappings":"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","file":"js/app.99b192e3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"请求调页算法模拟\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.main}},[_vm._v(\"开始模拟\")]),_c('el-container',{staticStyle:{}},[_c('el-row',{attrs:{\"gutter\":100}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-card',{staticStyle:{\"border-radius\":\"12px\"}},[_c('h3',[_vm._v(\"模拟结果\")]),_c('el-table',{staticStyle:{\"width\":\"500px\"},attrs:{\"data\":_vm.result,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"algorithm\",\"label\":\"算法\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"count\",\"label\":\"缺页次数\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"ratio\",\"label\":\"缺页率\",\"align\":\"center\"}})],1)],1)],1),_c('el-col',{attrs:{\"span\":16}},[_c('el-card',{staticStyle:{\"border-radius\":\"12px\"}},[_c('h3',[_vm._v(\"显示内存中的页面\")]),_c('el-row',[_c('el-col',{attrs:{\"span\":16}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-col',{attrs:{\"span\":8}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getRecord}},[_vm._v(\"查看\")])],1)],1),_c('el-table',{staticStyle:{\"width\":\"800px\"},attrs:{\"data\":_vm.record,\"stripe\":\"\",\"height\":\"400px\"}},[_c('el-table-column',{attrs:{\"prop\":\"num\",\"label\":\"指令\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"addr\",\"label\":\"逻辑地址\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"paddr\",\"label\":\"物理地址\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"miss\",\"label\":\"是否缺页\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"mem0\",\"label\":\"内存块0\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"mem1\",\"label\":\"内存块1\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"mem2\",\"label\":\"内存块2\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"mem3\",\"label\":\"内存块3\",\"align\":\"center\"}})],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <h1>请求调页算法模拟</h1>\n    <el-button type=\"primary\" @click=\"main\">开始模拟</el-button>\n    <el-container style=\"solid #eee\">\n      <el-row :gutter=\"100\">\n        <el-col :span=\"8\">\n          <el-card style=\"border-radius: 12px\">\n            <h3>模拟结果</h3>\n            <el-table :data=\"result\" stripe style=\"width: 500px\">\n              <el-table-column prop=\"algorithm\" label=\"算法\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"count\" label=\"缺页次数\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"ratio\" label=\"缺页率\" align=\"center\">\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n        <el-col :span=\"16\">\n          <el-card style=\"border-radius: 12px\">\n            <h3>显示内存中的页面</h3>\n            <el-row>\n              <el-col :span=\"16\">\n                <el-select v-model=\"value\" placeholder=\"请选择\">\n                  <el-option\n                    v-for=\"item in options\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"8\">\n                <el-button type=\"primary\" @click=\"getRecord\">查看</el-button>\n              </el-col>\n            </el-row>\n            <el-table :data=\"record\" stripe style=\"width: 800px\" height=\"400px\">\n              <el-table-column prop=\"num\" label=\"指令\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"addr\" label=\"逻辑地址\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"paddr\" label=\"物理地址\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"miss\" label=\"是否缺页\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"mem0\" label=\"内存块0\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"mem1\" label=\"内存块1\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"mem2\" label=\"内存块2\" align=\"center\">\n              </el-table-column>\n              <el-table-column prop=\"mem3\" label=\"内存块3\" align=\"center\">\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n      </el-row>\n    </el-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      addr: [],\n      page: [],\n      record: [],\n      result: [\n        {\n          algorithm: \"OPT\",\n          count: 0,\n          ratio: 0,\n        },\n        {\n          algorithm: \"FIFO\",\n          count: 0,\n          ratio: 0,\n        },\n        {\n          algorithm: \"LRU\",\n          count: 0,\n          ratio: 0,\n        },\n        {\n          algorithm: \"LFU\",\n          count: 0,\n          ratio: 0,\n        },\n        {\n          algorithm: \"Clock\",\n          count: 0,\n          ratio: 0,\n        },\n      ],\n      options: [\n        {\n          value: \"OPT\",\n          label: \"OPT\",\n        },\n        {\n          value: \"FIFO\",\n          label: \"FIFO\",\n        },\n        {\n          value: \"LRU\",\n          label: \"LRU\",\n        },\n        {\n          value: \"LFU\",\n          label: \"LFU\",\n        },\n        {\n          value: \"Clock\",\n          label: \"Clock\",\n        },\n      ],\n      value: \"OPT\",\n    };\n  },\n  methods: {\n    // 生成指令序列\n    getSeq() {\n      var arr = [];\n      var m = Math.floor(Math.random() * 320);\n      for (var i = 0; i < 80; ++i) {\n        arr.push(m);\n        arr.push(Math.min(m + 1, 319));\n        m = Math.floor(Math.random() * m);\n        arr.push(m);\n        arr.push(m + 1);\n        if (m != 319) {\n          m = Math.floor(Math.random() * (318 - m)) + m + 2;\n        }\n      }\n      console.log(arr);\n      return arr;\n    },\n\n    // 计算指令所在的页号\n    getPage() {\n      for (var i = 0; i < 320; ++i) {\n        this.page[i] = Math.floor(this.addr[i] / 10);\n      }\n    },\n\n    OPT() {\n      this.record = [];\n      var memory = [-1, -1, -1, -1];\n      var count = 0;\n      for (var i = 0; i < 320; ++i) {\n        var inMem = false;\n        for (var j = 0; j < 4; ++j) {\n          if (memory[j] === this.page[i]) {\n            // 页面已在内存中\n            inMem = true;\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + j * 10,\n              miss: \"否\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n            break;\n          }\n        }\n        if (!inMem) {\n          // 页面不在内存中, 需要调页\n          ++count;\n          var full = true;\n          for (var j = 0; j < 4; ++j) {\n            if (memory[j] === -1) {\n              // 内存块 j 为空, 直接调入\n              full = false;\n              memory[j] = this.page[i];\n              this.record.push({\n                num: i,\n                addr: this.addr[i],\n                paddr: (this.addr[i] % 10) + j * 10,\n                miss: \"是\",\n                mem0: memory[0],\n                mem1: memory[1],\n                mem2: memory[2],\n                mem3: memory[3],\n              });\n              break;\n            }\n          }\n          if (full) {\n            // 内存满, 需要替换\n            var replacePage = 0; // 被替换的页所在的内存块号\n            var maxt = 0; // 最长的下次使用时间\n            for (var j = 0; j < 4; ++j) {\n              var t; // 下次使用时间\n              for (t = i + 1; t < 320; ++t) {\n                if (this.page[t] === memory[j]) {\n                  break;\n                }\n              }\n              if (t === 320) {\n                // 之后不再使用\n                replacePage = j;\n                break;\n              }\n              if (t > maxt) {\n                maxt = t;\n                replacePage = j;\n              }\n            }\n            memory[replacePage] = this.page[i]; // 替换\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + replacePage * 10,\n              miss: \"是\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n          }\n        }\n      }\n      // 返回缺页次数\n      return count;\n    },\n\n    FIFO() {\n      this.record = [];\n      var memory = [-1, -1, -1, -1];\n      var queue = [];\n      var count = 0;\n      for (var i = 0; i < 320; ++i) {\n        var inMem = false;\n        for (var j = 0; j < 4; ++j) {\n          if (memory[j] === this.page[i]) {\n            // 页面已在内存中\n            inMem = true;\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + j * 10,\n              miss: \"否\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n            break;\n          }\n        }\n        if (!inMem) {\n          // 页面不在内存中, 需要调页\n          ++count;\n          var full = true;\n          for (var j = 0; j < 4; ++j) {\n            if (memory[j] === -1) {\n              // 内存块 j 为空, 直接调入\n              full = false;\n              memory[j] = this.page[i];\n              queue.push(j);\n              this.record.push({\n                num: i,\n                addr: this.addr[i],\n                paddr: (this.addr[i] % 10) + j * 10,\n                miss: \"是\",\n                mem0: memory[0],\n                mem1: memory[1],\n                mem2: memory[2],\n                mem3: memory[3],\n              });\n              break;\n            }\n          }\n          if (full) {\n            // 内存满, 需要替换\n            var replacePage = queue.shift();\n            memory[replacePage] = this.page[i]; // 替换\n            queue.push(replacePage);\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + replacePage * 10,\n              miss: \"是\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n          }\n        }\n      }\n      // 返回缺页次数\n      return count;\n    },\n\n    LRU() {\n      this.record = [];\n      var memory = [-1, -1, -1, -1];\n      var lastUse = [-1, -1, -1, -1];\n      var count = 0;\n      for (var i = 0; i < 320; ++i) {\n        var inMem = false;\n        for (var j = 0; j < 4; ++j) {\n          if (memory[j] === this.page[i]) {\n            // 页面已在内存中\n            inMem = true;\n            lastUse[j] = i;\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + j * 10,\n              miss: \"否\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n            break;\n          }\n        }\n        if (!inMem) {\n          // 页面不在内存中, 需要调页\n          ++count;\n          var full = true;\n          for (var j = 0; j < 4; ++j) {\n            if (memory[j] === -1) {\n              // 内存块 j 为空, 直接调入\n              full = false;\n              memory[j] = this.page[i];\n              lastUse[j] = i;\n              this.record.push({\n                num: i,\n                addr: this.addr[i],\n                paddr: (this.addr[i] % 10) + j * 10,\n                miss: \"是\",\n                mem0: memory[0],\n                mem1: memory[1],\n                mem2: memory[2],\n                mem3: memory[3],\n              });\n              break;\n            }\n          }\n          if (full) {\n            // 内存满, 需要替换\n            var replacePage = 0; // 被替换的页所在的内存块号\n            var minLastUse = 320; // 最早的上次使用时间\n            for (var j = 0; j < 4; ++j) {\n              if (lastUse[j] < minLastUse) {\n                minLastUse = lastUse[j];\n                replacePage = j;\n              }\n            }\n            memory[replacePage] = this.page[i]; // 替换\n            lastUse[replacePage] = i;\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + replacePage * 10,\n              miss: \"是\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n          }\n        }\n      }\n      // 返回缺页次数\n      return count;\n    },\n\n    LFU() {\n      this.record = [];\n      var memory = [-1, -1, -1, -1];\n      var useCount = [0, 0, 0, 0];\n      var count = 0;\n      for (var i = 0; i < 320; ++i) {\n        var inMem = false;\n        for (var j = 0; j < 4; ++j) {\n          if (memory[j] === this.page[i]) {\n            // 页面已在内存中\n            inMem = true;\n            ++useCount[j];\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + j * 10,\n              miss: \"否\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n            break;\n          }\n        }\n        if (!inMem) {\n          // 页面不在内存中, 需要调页\n          ++count;\n          var full = true;\n          for (var j = 0; j < 4; ++j) {\n            if (memory[j] === -1) {\n              // 内存块 j 为空, 直接调入\n              full = false;\n              memory[j] = this.page[i];\n              useCount[j] = 1;\n              this.record.push({\n                num: i,\n                addr: this.addr[i],\n                paddr: (this.addr[i] % 10) + j * 10,\n                miss: \"是\",\n                mem0: memory[0],\n                mem1: memory[1],\n                mem2: memory[2],\n                mem3: memory[3],\n              });\n              break;\n            }\n          }\n          if (full) {\n            // 内存满, 需要替换\n            var replacePage = 0; // 被替换的页所在的内存块号\n            var minUse = 321; // 最少使用次数\n            for (var j = 0; j < 4; ++j) {\n              if (useCount[j] < minUse) {\n                minUse = useCount[j];\n                replacePage = j;\n              }\n            }\n            memory[replacePage] = this.page[i]; // 替换\n            useCount[j] = 1;\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + replacePage * 10,\n              miss: \"是\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n          }\n        }\n      }\n      // 返回缺页次数\n      return count;\n    },\n\n    Clock() {\n      this.record = [];\n      var memory = [-1, -1, -1, -1];\n      var refbits = [0, 0, 0, 0]; // 访问位\n      var count = 0; // 缺页次数\n      var p = 0; // 循环队列的扫描指针\n      for (var i = 0; i < 320; ++i) {\n        var inMem = false;\n        for (var j = 0; j < 4; ++j) {\n          if (memory[j] === this.page[i]) {\n            // 页面已在内存中\n            inMem = true;\n            refbits[j] = 1;\n            this.record.push({\n              num: i,\n              addr: this.addr[i],\n              paddr: (this.addr[i] % 10) + j * 10,\n              miss: \"否\",\n              mem0: memory[0],\n              mem1: memory[1],\n              mem2: memory[2],\n              mem3: memory[3],\n            });\n            break;\n          }\n        }\n        if (!inMem) {\n          // 页面不在内存中, 需要调页\n          ++count;\n          var full = true;\n          for (var j = 0; j < 4; ++j) {\n            if (memory[j] === -1) {\n              // 内存块 j 为空, 直接调入\n              full = false;\n              memory[j] = this.page[i];\n              refbits[j] = 1;\n              this.record.push({\n                num: i,\n                addr: this.addr[i],\n                paddr: (this.addr[i] % 10) + j * 10,\n                miss: \"是\",\n                mem0: memory[0],\n                mem1: memory[1],\n                mem2: memory[2],\n                mem3: memory[3],\n              });\n              break;\n            }\n          }\n          if (full) {\n            // 内存满, 需要替换\n            while (1) {\n              if (refbits[p] === 1) {\n                refbits[p] = 0; // 访问位置为0\n                p = (p + 1) % 4; // 循环指向下一个页面\n              } else {\n                memory[p] = this.page[i]; // 替换\n                refbits[p] = 1;\n                this.record.push({\n                  num: i,\n                  addr: this.addr[i],\n                  paddr: (this.addr[i] % 10) + p * 10,\n                  miss: \"是\",\n                  mem0: memory[0],\n                  mem1: memory[1],\n                  mem2: memory[2],\n                  mem3: memory[3],\n                });\n                p = (p + 1) % 4; // 循环指向下一个页面\n                break;\n              }\n            }\n          }\n        }\n      }\n      // 返回缺页次数\n      return count;\n    },\n\n    getRecord() {\n      if (this.page.length == 0) {\n        alert(\"请先开始模拟!\");\n      } else {\n        switch (this.value) {\n          case \"FIFO\":\n            this.FIFO();\n            break;\n          case \"LRU\":\n            this.LRU();\n            break;\n          case \"LFU\":\n            this.LFU();\n            break;\n          case \"Clock\":\n            this.Clock();\n            break;\n          default:\n            this.OPT();\n        }\n      }\n    },\n    main() {\n      this.addr = this.getSeq();\n      this.getPage();\n\n      this.result[0].count = this.OPT();\n      this.result[1].count = this.FIFO();\n      this.result[2].count = this.LRU();\n      this.result[3].count = this.LFU();\n      this.result[4].count = this.Clock();\n      \n      this.getRecord();\n\n      for (var i = 0; i < 5; ++i) {\n        this.result[i].ratio = this.result[i].count / 320;\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.el-container {\n  margin-top: 30px;\n  margin-left: 150px;\n  margin-right: 150px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=354ad24c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport store from './store'\r\n\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\n\r\nVue.use(ElementUI)\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"],"sourceRoot":""}